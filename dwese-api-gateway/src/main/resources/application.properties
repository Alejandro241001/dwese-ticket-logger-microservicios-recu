# Nombre de la aplicaciÃ³n dentro del ecosistema Spring Boot
spring.application.name=dwese-api-gateway


# Configura el nivel de logs para depuraciÃ³n en el API Gateway
# Muestra informaciÃ³n detallada sobre cÃ³mo se procesan las rutas y peticiones
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.org.springframework.web=DEBUG

# URLs internas de los microservicios (Docker Compose usa los nombres de los servicios como host)
microservice.auth.url=http://auth-service:8080
microservice.api.url=http://ticket-logger-api:8080


# ConfiguraciÃ³n de rutas en API Gateway


## RUTA: Servicio de autenticaciÃ³n (auth-service)
spring.cloud.gateway.routes[0].id=auth-service
spring.cloud.gateway.routes[0].uri=${microservice.auth.url}
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v1/auth/**


## RUTA: Servicio principal de la aplicaciÃ³n (ticket-logger-api)
spring.cloud.gateway.routes[1].id=ticket-logger-api
spring.cloud.gateway.routes[1].uri=${microservice.api.url}
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/v1/ticket-logger/**

jwt.secret=${JWT_SECRET}
jwt.keystore.path=${JWT_KEYSTORE_PATH}
jwt.keystore.password=${JWT_KEYSTORE_PASSWORD}
jwt.keystore.alias=${JWT_KEYSTORE_ALIAS}

# Puerto en el que se ejecuta el API Gateway
server.port=8080
